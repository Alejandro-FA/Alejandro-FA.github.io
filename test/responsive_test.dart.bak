// This is a basic Flutter widget test.
//
// To perform an interaction with a widget in your test, use the WidgetTester
// utility in the flutter_test package. For example, you can send tap and scroll
// gestures. You can also use WidgetTester to find child widgets in the widget
// tree, read text, and verify that the values of widget properties are correct.

import 'package:flutter/material.dart';
import 'package:flutter_test/flutter_test.dart';

import 'package:portfolio/models/route_data.dart';
import 'package:portfolio/widgets/sliver_app_bar.dart';

const routesEnglish = [
  RouteData(
    name: 'Research',
    path: '/research',
    icon: Icons.article,
  ),
  RouteData(
    name: 'Projects',
    path: '/projects',
    icon: Icons.terminal,
  ),
  RouteData(
    name: 'Curriculum Vitae',
    path: '/cv',
    icon: Icons.school,
  ),
];

void main() {
  testWidgets('ResponsiveAppBar adapts based on screen width', (tester) async {
    tester.view.devicePixelRatio = 1.0;
    const appTitle = 'Alejandro';

    // Build our app and trigger a frame.
    // Build our app with English top bar and trigger a frame.
    await tester.pumpWidget(
      const MaterialApp(
        home: Scaffold(
          body: CustomScrollView(
            physics: BouncingScrollPhysics(),
            slivers: [
              MySliverAppBar(menuRoutes: routesEnglish),
            ],
          ),
        ),
      ),
    );

    // Test actions visibility when screen width is greater than the breakpoint
    tester.view.physicalSize = const Size(840, 600);
    await tester.pump();
    expect(find.byIcon(Icons.menu), findsNothing);
    expect(find.text(appTitle), findsOneWidget);

    // Test actions visibility when screen width is less than the breakpoint
    tester.view.physicalSize = const Size(839, 600);
    await tester.pump();
    expect(find.byIcon(Icons.menu), findsOneWidget);
    expect(find.text(appTitle), findsOneWidget);
  });
}
