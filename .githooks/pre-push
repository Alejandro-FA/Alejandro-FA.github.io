#!/bin/bash

# Avoid masking errors
set -uo pipefail

# Script parameters
original_dir=$(pwd)
repo_root=$(git rev-parse --show-toplevel)
app_dir="${repo_root}/app"

setup() {
    # Navigate to the root of the Flutter app
    cd "${app_dir}" || return 1
}

run_tests () {
    # Ensure that the Flutter web app builds successfully
    flutter build web --no-web-resources-cdn --release --wasm || return 1
}

cleanup_and_exit() {
    local exit_code=$? # Capture the last error code
    local message=$1

    # Ensure we navigate back to the original directory
    cd "${original_dir}" || exit

    # Exit with the last error code after printing the provided message
    if [[ "${exit_code}" -eq 0 ]]; then
        echo -e "\033[1;32m${message}\033[0m" # Print the message in bold green
    else
        echo -e "\033[1;31m${message}\033[0m" # Print the message in bold red
    fi
    exit "${exit_code}"
}

# Main script logic
setup || cleanup_and_exit "Failed to setup the pre-push hook."
run_tests || cleanup_and_exit "Failed to build the Flutter web app."
cleanup_and_exit "Pre-push tests passed. Pushing commits."
